CREATE USER IF NOT EXISTS SA SALT 'c3e321e13850820c' HASH '7c6d2d65df7521fe88eabe8f1ace948b69213dfd55df2390b872ad483f2d5c21' ADMIN;
CREATE SCHEMA IF NOT EXISTS LIBRARY_SCHEMA AUTHORIZATION SA;
CREATE SEQUENCE LIBRARY_SCHEMA.SYSTEM_SEQUENCE_AD2E5606_7A22_4377_8BE6_D7E10810E23D START WITH 4 BELONGS_TO_TABLE;
CREATE SEQUENCE LIBRARY_SCHEMA.SYSTEM_SEQUENCE_1346EBD2_AE3E_439A_9129_5D6D940F029D START WITH 4 BELONGS_TO_TABLE;
CREATE CACHED TABLE LIBRARY_SCHEMA.LIBRARY_CARD(
    CARD_ID INT DEFAULT (NEXT VALUE FOR LIBRARY_SCHEMA.SYSTEM_SEQUENCE_AD2E5606_7A22_4377_8BE6_D7E10810E23D) NOT NULL NULL_TO_DEFAULT SEQUENCE LIBRARY_SCHEMA.SYSTEM_SEQUENCE_AD2E5606_7A22_4377_8BE6_D7E10810E23D,
    START_DATE TIMESTAMP NOT NULL,
    EXPIRATION_DATE TIMESTAMP NOT NULL
);
ALTER TABLE LIBRARY_SCHEMA.LIBRARY_CARD ADD CONSTRAINT LIBRARY_SCHEMA.CONSTRAINT_2 PRIMARY KEY(CARD_ID);
-- 3 +/- SELECT COUNT(*) FROM LIBRARY_SCHEMA.LIBRARY_CARD;
INSERT INTO LIBRARY_SCHEMA.LIBRARY_CARD(CARD_ID, START_DATE, EXPIRATION_DATE) VALUES
(1, TIMESTAMP '2013-04-15 06:16:41.313', TIMESTAMP '2014-04-15 06:16:41.313'),
(2, TIMESTAMP '2013-04-15 06:17:06.154', TIMESTAMP '2014-04-15 06:17:06.154'),
(3, TIMESTAMP '2013-04-15 06:17:30.593', TIMESTAMP '2014-04-15 06:17:30.593');
CREATE CACHED TABLE LIBRARY_SCHEMA.USERS(
    USER_ID INT DEFAULT (NEXT VALUE FOR LIBRARY_SCHEMA.SYSTEM_SEQUENCE_1346EBD2_AE3E_439A_9129_5D6D940F029D) NOT NULL NULL_TO_DEFAULT SEQUENCE LIBRARY_SCHEMA.SYSTEM_SEQUENCE_1346EBD2_AE3E_439A_9129_5D6D940F029D,
    FIRSTNAME VARCHAR(255) NOT NULL,
    LASTNAME VARCHAR(255) NOT NULL,
    EMAIL VARCHAR(255),
    CARD_ID INT NOT NULL
);
ALTER TABLE LIBRARY_SCHEMA.USERS ADD CONSTRAINT LIBRARY_SCHEMA.CONSTRAINT_4 PRIMARY KEY(USER_ID);
-- 3 +/- SELECT COUNT(*) FROM LIBRARY_SCHEMA.USERS;
INSERT INTO LIBRARY_SCHEMA.USERS(USER_ID, FIRSTNAME, LASTNAME, EMAIL, CARD_ID) VALUES
(1, 'Fred', 'Flintstone', 'fflintstone@bedrock.com', 1),
(2, 'Barney', 'Rubble', 'brubble@rubble.net', 2),
(3, 'Pebbles', 'Flintstone', 'pebbles.flintstone@stones.net', 3);
ALTER TABLE LIBRARY_SCHEMA.USERS ADD CONSTRAINT LIBRARY_SCHEMA.FKCARDID FOREIGN KEY(CARD_ID) REFERENCES LIBRARY_SCHEMA.LIBRARY_CARD(CARD_ID) NOCHECK;
